plugins {
    id 'java'
//    id 'jacoco'
//    id 'nebula.release' version '6.0.0'
    id 'maven'
//    id 'signing'
}

group 'com.github.crob1140'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    def jerseyVersion = "2.27"
    compile group: 'org.glassfish.jersey.core', name: 'jersey-common', version: jerseyVersion
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: jerseyVersion
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jerseyVersion
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jerseyVersion

    def jacksonVersion = "2.10.0.pr2"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.17.0'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
}

//test {
//    jacoco {
//        append = false
//    }
//}


//jacocoTestReport {
//    reports {
//        xml.enabled true
//        html.enabled false
//    }
//}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

//uploadArchives {
//    repositories {
//        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            pom.project {
//                artifactId = 'confluence-java-client'
//                name 'Confluence Java Client'
//                packaging 'jar'
//                description 'A simple Java client for the Confluence Cloud REST API'
//                url 'https://github.com/crob1140/confluence-java-client'
//
//                scm {
//                    connection 'scm:git@github.com/crob1140/confluence-java-client.git'
//                    developerConnection 'scm:git@github.com/crob1140/confluence-java-client.git'
//                    url 'https://github.com/crob1140/confluence-java-client.git'
//                }
//
//                licenses {
//                    license {
//                        name 'The MIT License'
//                        url "http://www.opensource.org/licenses/MIT"
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'cjrobertson'
//                        name 'Callum Robertson'
//                        email 'mail@cjrobertson.net'
//                    }
//                }
//            }
//        }
//    }
//}

//signing {
//    sign configurations.archives
//}
//
//tasks.final.finalizedBy uploadArchives